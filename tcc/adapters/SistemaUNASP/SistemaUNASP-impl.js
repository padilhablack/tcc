/*
 *  Licensed Materials - Property of IBM
 *  5725-I43 (C) Copyright IBM Corp. 2011, 2013. All Rights Reserved.
 *  US Government Users Restricted Rights - Use, duplication or
 *  disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 */

/************************************************************************
 * Implementation code for procedure - 'procedure1'
 *
 *
 * @return - invocationResult
 */

//PROCEDURE LOGIN
var sqlLogin = WL.Server.createSQLStatement("SELECT cod_senha, cod_pessoa, nom_pessoa, end_email FROM supervisor.pessoa WHERE cod_pessoa = ? and cod_senha = ?");
function login(usuario,senha) {
	return WL.Server.invokeSQLStatement({
		preparedStatement : sqlLogin,
		parameters : [usuario,senha]
	});
}

//PROCEDURE QUE DEVOLVE O CURSO
var sqlCurso = WL.Server.createSQLStatement("SELECT DISTINCT supervisor.CURSO.COD_CURSO, RTRIM(LTRIM(supervisor.CURSO.DES_CURSO)) AS DES_CURSO  FROM supervisor.ALUNO_X_MATRIZ_CURRICULAR " +
		"INNER JOIN  supervisor.MATRIZ_CURRICULAR ON supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR " +
		"INNER JOIN  supervisor.CURSO ON supervisor.MATRIZ_CURRICULAR.COD_CURSO = supervisor.CURSO.COD_CURSO " +
		"INNER JOIN  supervisor.UNIDADE_ESCOLAR ON supervisor.CURSO.COD_UNIDADE_ESCOLAR = supervisor.UNIDADE_ESCOLAR.COD_UNIDADE_ESCOLAR AND ISNULL(supervisor.UNIDADE_ESCOLAR.COD_PARAMETRO,0) <> 42 " +
"WHERE (supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA = ? )  ORDER BY DES_CURSO");
function retornaCurso(ra) {
	return WL.Server.invokeSQLStatement({
		preparedStatement : sqlCurso,
		parameters : [ra]
	});
}

//PROCEDURE PERIODO
var sqlPeriodo = WL.Server.createSQLStatement("SELECT DISTINCT PLCMCA.ANO_LETIVO, supervisor.PERIODO.DES_PERIODO, PLCMCA.COD_PERIODO AS CURSOANOPERIODO,         CONVERT(CHAR(4),PLCMCA.ANO_LETIVO) + ' - ' + RTRIM(LTRIM(DES_PERIODO)) AS ANODESPERIODO  FROM (SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO        FROM supervisor.GRADE INNER JOIN  	   supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND   	   supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND   	   supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND   	   supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND   	   supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN  	   supervisor.ALUNO_X_MATRIZ_CURRICULAR ON   	   supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA AND   	   supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR INNER JOIN  	   supervisor.MATRIZ_CURRICULAR ON   	   supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ?      WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )  UNION           SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO        FROM supervisor.GRADE INNER JOIN  	   supervisor.MATRIZ_DISCIPLINA_OFERTADA ON   	   supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR AND   	   supervisor.GRADE.COD_ETAPA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA AND   	   supervisor.GRADE.COD_DISCIPLINA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_OFERTADA INNER JOIN  	   supervisor.MATRIZ_CURRICULAR_DISCIPLINA ON   	   supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR AND   	   supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA AND   	   supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_MATRIZ = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA INNER JOIN  	   supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND   	   supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND   	   supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND   	   supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND   	   supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN  	   supervisor.ALUNO_X_MATRIZ_CURRICULAR ON   	   supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA INNER JOIN  	   supervisor.MATRIZ_CURRICULAR ON   	   supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ? INNER JOIN  	   supervisor.MATRIZ_EQUIVALENCIA ON   	   supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA.COD_MATRIZ_PRINCIPAL AND   	   supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA.COD_MATRIZ_EQUIVALENTE AND   	   supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA = supervisor.MATRIZ_EQUIVALENCIA.COD_ETAPA_EQUIVALENTE AND   	   supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA = supervisor.MATRIZ_EQUIVALENCIA.COD_DISCIPLINA_EQUIVALENTE        WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )  UNION        SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO        FROM supervisor.GRADE INNER JOIN             supervisor.MATRIZ_DISCIPLINA_OFERTADA ON              supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR AND              supervisor.GRADE.COD_ETAPA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA AND              supervisor.GRADE.COD_DISCIPLINA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_OFERTADA INNER JOIN             supervisor.MATRIZ_CURRICULAR_DISCIPLINA ON              supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA AND              supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_MATRIZ = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA INNER JOIN             supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND              supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND              supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND              supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND              supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN             supervisor.ALUNO_X_MATRIZ_CURRICULAR ON              supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA INNER JOIN             supervisor.MATRIZ_CURRICULAR ON              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ? INNER JOIN             supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL ON              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_MATRIZ_PRINCIPAL AND              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_PESSOA AND             supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_MATRIZ_EQUIVALENTE AND              supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_ETAPA_EQUIVALENTE AND              supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_DISCIPLINA_EQUIVALENTE         WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )) PLCMCA INNER JOIN        supervisor.PERIODO ON PLCMCA.COD_PERIODO = supervisor.PERIODO.COD_PERIODO   ORDER BY PLCMCA.ANO_LETIVO DESC, DES_PERIODO");
function retornaPeriodo(curso,ra) {
	convertCurso = String(curso) 
	return WL.Server.invokeSQLStatement({
		preparedStatement : sqlPeriodo,
		parameters : [convertCurso,ra,convertCurso,ra,convertCurso,ra]
	});
}

//PROCEDURE TURMA
var sqlTurma = WL.Server.createSQLStatement("SELECT DISTINCT PLCMCA.ANO_LETIVO, PLCMCA.COD_PERIODO, PLCMCA.COD_TURMA,    RTRIM(LTRIM(PLCMCA.COD_TURMA)) + ' - ' + RTRIM(LTRIM(supervisor.TURMA.DES_TURMA)) AS TURMA,    PLCMCA.COD_TURMA AS CURANOPERTURMA  FROM (SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.COD_TURMA, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO        FROM supervisor.GRADE INNER JOIN     supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND      supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND      supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND      supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND      supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN     supervisor.ALUNO_X_MATRIZ_CURRICULAR ON      supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA AND      supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR INNER JOIN     supervisor.MATRIZ_CURRICULAR ON      supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ?        WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO = ? )  UNION           SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.COD_TURMA, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO        FROM supervisor.GRADE INNER JOIN     supervisor.MATRIZ_DISCIPLINA_OFERTADA ON      supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR AND      supervisor.GRADE.COD_ETAPA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA AND      supervisor.GRADE.COD_DISCIPLINA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_OFERTADA INNER JOIN     supervisor.MATRIZ_CURRICULAR_DISCIPLINA ON      supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR AND      supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA AND      supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_MATRIZ = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA INNER JOIN     supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND      supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND      supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND      supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND      supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN     supervisor.ALUNO_X_MATRIZ_CURRICULAR ON      supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA INNER JOIN     supervisor.MATRIZ_CURRICULAR ON      supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ? INNER JOIN     supervisor.MATRIZ_EQUIVALENCIA ON      supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA.COD_MATRIZ_PRINCIPAL AND      supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA.COD_MATRIZ_EQUIVALENTE AND      supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA = supervisor.MATRIZ_EQUIVALENCIA.COD_ETAPA_EQUIVALENTE AND      supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA = supervisor.MATRIZ_EQUIVALENCIA.COD_DISCIPLINA_EQUIVALENTE        WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO = ? )  UNION        SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.COD_TURMA, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO  FROM supervisor.GRADE INNER JOIN             supervisor.MATRIZ_DISCIPLINA_OFERTADA ON              supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR AND              supervisor.GRADE.COD_ETAPA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA AND              supervisor.GRADE.COD_DISCIPLINA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_OFERTADA INNER JOIN             supervisor.MATRIZ_CURRICULAR_DISCIPLINA ON              supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA AND              supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_MATRIZ = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA INNER JOIN             supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND              supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND              supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND              supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND              supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN             supervisor.ALUNO_X_MATRIZ_CURRICULAR ON              supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA INNER JOIN             supervisor.MATRIZ_CURRICULAR ON              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ? INNER JOIN             supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL ON              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_MATRIZ_PRINCIPAL AND              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_PESSOA AND             supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_MATRIZ_EQUIVALENTE AND              supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_ETAPA_EQUIVALENTE AND              supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_DISCIPLINA_EQUIVALENTE  WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO = ? )) PLCMCA INNER JOIN        supervisor.TURMA ON supervisor.TURMA.COD_TURMA = PLCMCA.COD_TURMA  ORDER BY TURMA"
);
function retornaTurma(curso,ra,ano,periodo) {
	convertCurso = String(curso) 
	return WL.Server.invokeSQLStatement({
		preparedStatement : sqlTurma,
		parameters : [convertCurso,ra,ano,periodo,convertCurso,ra,ano,periodo,convertCurso,ra,ano,periodo]
	});
}

//PROCEDURE DISCIPLINA
var sqlDisciplina = WL.Server.createSQLStatement("SELECT DISTINCT PLCMCA.ANO_LETIVO, PLCMCA.COD_PERIODO, PLCMCA.COD_TURMA, PLCMCA.COD_DISCIPLINA,         RTRIM(LTRIM(supervisor.DISCIPLINA.DES_DISCIPLINA)) AS DES_DISCIPLINA,         PLCMCA.COD_CURSO + CONVERT(CHAR(4),PLCMCA.ANO_LETIVO) + CONVERT(CHAR(2),PLCMCA.COD_PERIODO) + PLCMCA.COD_DISCIPLINA + PLCMCA.COD_TURMA AS CURANOPERDISCTURMA  FROM (SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.COD_TURMA, supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO        FROM supervisor.GRADE INNER JOIN     supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND      supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND      supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND      supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND      supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN     supervisor.ALUNO_X_MATRIZ_CURRICULAR ON      supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA AND      supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR INNER JOIN     supervisor.MATRIZ_CURRICULAR ON      supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ?        WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_TURMA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO = ? )  UNION           SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.COD_TURMA, supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO        FROM supervisor.GRADE INNER JOIN     supervisor.MATRIZ_DISCIPLINA_OFERTADA ON      supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR AND      supervisor.GRADE.COD_ETAPA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA AND      supervisor.GRADE.COD_DISCIPLINA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_OFERTADA INNER JOIN     supervisor.MATRIZ_CURRICULAR_DISCIPLINA ON      supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR AND      supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA AND      supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_MATRIZ = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA INNER JOIN     supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND      supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND      supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND      supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND      supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN     supervisor.ALUNO_X_MATRIZ_CURRICULAR ON      supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA INNER JOIN     supervisor.MATRIZ_CURRICULAR ON      supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ? INNER JOIN     supervisor.MATRIZ_EQUIVALENCIA ON      supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA.COD_MATRIZ_PRINCIPAL AND      supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA.COD_MATRIZ_EQUIVALENTE AND      supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA = supervisor.MATRIZ_EQUIVALENCIA.COD_ETAPA_EQUIVALENTE AND      supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA = supervisor.MATRIZ_EQUIVALENCIA.COD_DISCIPLINA_EQUIVALENTE        WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_TURMA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO = ? )  UNION        SELECT DISTINCT supervisor.MATRIZ_CURRICULAR.COD_CURSO, supervisor.ALUNO_X_DISCIPLINA.COD_TURMA, supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA, supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO, supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO  FROM supervisor.GRADE INNER JOIN             supervisor.MATRIZ_DISCIPLINA_OFERTADA ON              supervisor.GRADE.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR AND              supervisor.GRADE.COD_ETAPA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA AND              supervisor.GRADE.COD_DISCIPLINA = supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_OFERTADA INNER JOIN             supervisor.MATRIZ_CURRICULAR_DISCIPLINA ON              supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_ETAPA = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA AND              supervisor.MATRIZ_DISCIPLINA_OFERTADA.COD_DISCIPLINA_MATRIZ = supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA INNER JOIN             supervisor.ALUNO_X_DISCIPLINA ON supervisor.GRADE.COD_TURMA = supervisor.ALUNO_X_DISCIPLINA.COD_TURMA AND              supervisor.GRADE.COD_DISCIPLINA = supervisor.ALUNO_X_DISCIPLINA.COD_DISCIPLINA AND              supervisor.GRADE.COD_PESSOA = supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA_PROFES AND              supervisor.GRADE.ANO_LETIVO = supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO AND              supervisor.GRADE.COD_PERIODO = supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO INNER JOIN             supervisor.ALUNO_X_MATRIZ_CURRICULAR ON              supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA INNER JOIN             supervisor.MATRIZ_CURRICULAR ON              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR AND             supervisor.MATRIZ_CURRICULAR.COD_CURSO = ? INNER JOIN             supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL ON              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_MATRIZ_PRINCIPAL AND              supervisor.ALUNO_X_MATRIZ_CURRICULAR.COD_PESSOA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_PESSOA AND             supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_MATRIZ_CURRICULAR = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_MATRIZ_EQUIVALENTE AND              supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_ETAPA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_ETAPA_EQUIVALENTE AND              supervisor.MATRIZ_CURRICULAR_DISCIPLINA.COD_DISCIPLINA = supervisor.MATRIZ_EQUIVALENCIA_INDIVIDUAL.COD_DISCIPLINA_EQUIVALENTE  WHERE (supervisor.ALUNO_X_DISCIPLINA.COD_PESSOA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_TURMA = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.ANO_LETIVO = ? )          AND (supervisor.ALUNO_X_DISCIPLINA.COD_PERIODO = ? )) PLCMCA INNER JOIN        supervisor.DISCIPLINA ON supervisor.DISCIPLINA.COD_DISCIPLINA = PLCMCA.COD_DISCIPLINA  ORDER BY DES_DISCIPLINA"
);
function retornaDisciplina(curso,ra,turma,ano,periodo) {
	convertCurso = String(curso),convertTurma = String(turma) 
	return WL.Server.invokeSQLStatement({
		preparedStatement : sqlDisciplina,
		parameters : [convertCurso,ra,convertTurma,ano,periodo,convertCurso,ra,convertTurma,ano,periodo,convertCurso,ra,convertTurma,ano,periodo]
	});
}






